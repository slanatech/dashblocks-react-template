{"version":3,"sources":["webpack:///./node_modules/chartjs-plugin-funnel/dist/chart.funnel.js"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,GAAG,IAAsD,EAAE,mBAAmB,KAAK,UAAyP,CAAC,aAAa,0BAA0B,mBAAmB,kBAAkB,gBAAgB,UAAU,UAAU,0CAA0C,gBAAgB,OAAC,OAAO,oBAAoB,8CAA8C,kCAAkC,YAAY,YAAY,mCAAmC,iBAAiB,eAAe,sBAAsB,oBAAoB,kDAAkD,WAAW,YAAY,SAAS,SAAS,KAAK;;AAEr1B,CAAC,GAAG;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC,EAAE,kBAAkB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA,0DAA0D,UAAU;AACpE;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAmB;AAC5C,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;;AAEA,CAAC,GAAG;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oCAAoC,eAAe;AACnD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,OAAO;AACzB;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,GAAG;AACH,EAAE;AACF;;AAEA,CAAC,GAAG,EAAE,GAAG;AACT,CAAC","file":"db-dashboard.3.js","sourcesContent":["/*!\r\n * Chart.Funnel.js\r\n * A funnel plugin for Chart.js(http://chartjs.org/)\r\n * Version: 1.1.5\r\n *\r\n * Copyright 2016 Jone Casaper & YetiForce\r\n * Released under the MIT license\r\n * https://github.com/xch89820/Chart.Funnel.js/blob/master/LICENSE.md\r\n */\r\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}(g.Chart || (g.Chart = {})).Funnel = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\r\n\r\n},{}],2:[function(require,module,exports){\r\n/**\r\n *\r\n * Main file of Chart.Funnel.js\r\n * @author Jone Casper\r\n * @email xu.chenhui@live.com\r\n *\r\n */\r\n\r\n/* global window */\r\n\"use strict\";\r\n\r\nvar Chart = require(1);\r\nChart = typeof(Chart) === 'function' ? Chart : window.Chart;\r\n\r\nrequire(4)(Chart);\r\nrequire(3)(Chart);\r\n\r\nmodule.exports = Chart;\r\n},{\"1\":1,\"3\":3,\"4\":4}],3:[function(require,module,exports){\r\n/**\r\n *\r\n * Extend funnel Charts\r\n * @author Jone Casper\r\n * @email xu.chenhui@live.com\r\n *\r\n * @example\r\n * var data = {\r\n *  labels: [\"A\", \"B\", \"C\"],\r\n * \tdatasets: [{\r\n * \t  data: [300, 50, 100],\r\n * \t  backgroundColor: [\r\n *       \"#FF6384\",\r\n *       \"#36A2EB\",\r\n *       \"#FFCE56\"\r\n *    ],\r\n *    hoverBackgroundColor: [\r\n *        \"#FF6384\",\r\n *        \"#36A2EB\",\r\n *        \"#FFCE56\"\r\n *    ]\r\n * \t}]\r\n * }\r\n *\r\n */\r\n\r\n\"use strict\";\r\n\r\nmodule.exports = function (Chart) {\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.funnel = {\r\n\t\thover: {\r\n\t\t\tmode: \"label\"\r\n\t\t},\r\n\t\tsort: 'asc', // sort options: 'asc', 'desc'\r\n\t\tgap: 0,\r\n\t\tbottomWidth: null, // the bottom width of funnel\r\n\t\ttopWidth: 0, // the top width of funnel\r\n\t\tkeep: 'auto', // Keep left or right\r\n\t\telements: {\r\n\t\t\tborderWidth: 0\r\n\t\t},\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function (tooltipItem, data) {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function (tooltipItem, data) {\r\n\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tlegendCallback: function (chart) {\r\n\t\t\tvar text = [];\r\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n\t\t\tvar data = chart.data;\r\n\t\t\tvar datasets = data.datasets;\r\n\t\t\tvar labels = data.labels;\r\n\r\n\t\t\tif (datasets.length) {\r\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\r\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n\t\t\t\t\tif (labels[i]) {\r\n\t\t\t\t\t\ttext.push(labels[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext.push('</li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttext.push('</ul>');\r\n\t\t\treturn text.join(\"\");\r\n\t\t},\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tgenerateLabels: function (chart) {\r\n\t\t\t\t\tvar data = chart.data;\r\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\r\n\t\t\t\t\t\treturn data.labels.map(function (label, i) {\r\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\r\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\r\n\t\t\t\t\t\t\tvar trap = meta.data[i];\r\n\t\t\t\t\t\t\tvar custom = trap.custom || {};\r\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\t\t\t\t\tvar trapeziumOpts = chart.options.elements.trapezium;\r\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, trapeziumOpts.backgroundColor);\r\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, trapeziumOpts.borderColor);\r\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, trapeziumOpts.borderWidth);\r\n\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttext: label,\r\n\t\t\t\t\t\t\t\tfillStyle: fill,\r\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\r\n\t\t\t\t\t\t\t\tlineWidth: bw,\r\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\r\n\t\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\t\t// Original Index\r\n\t\t\t\t\t\t\t\t_index: trap._index\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tonClick: function (e, legendItem) {\r\n\t\t\t\tvar index = legendItem.index;\r\n\t\t\t\tvar chart = this.chart;\r\n\t\t\t\tvar i, ilen, meta;\r\n\r\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchart.update();\r\n\t\t\t}\r\n\t\t},\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\t\tposition: 'left',\r\n\t\t\t\t\ttype: 'category',\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t// Specific to Horizontal Bar Controller\r\n\t\t\t\t\tcategoryPercentage: 0.8,\r\n\t\t\t\t\tbarPercentage: 0.9,\r\n\r\n\t\t\t\t\t// offset settings\r\n\t\t\t\t\toffset: true,\r\n\r\n\t\t\t\t\t// grid line settings\r\n\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\toffsetGridLines: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\t\tposition: 'left',\r\n\t\t\t\t\ttype: 'category',\r\n\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t// Specific to Horizontal Bar Controller\r\n\t\t\t\t\tcategoryPercentage: 0.8,\r\n\t\t\t\t\tbarPercentage: 0.9,\r\n\r\n\t\t\t\t\t// offset settings\r\n\t\t\t\t\toffset: true,\r\n\r\n\t\t\t\t\t// grid line settings\r\n\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\toffsetGridLines: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}]\r\n\t\t},\r\n\t};\r\n\r\n\tChart.controllers.funnel = Chart.DatasetController.extend({\r\n\r\n\t\tdataElementType: Chart.elements.Trapezium,\r\n\r\n\t\tinitialize: function (chart, datasetIndex) {\r\n\t\t\tChart.controllers.bar.prototype.initialize.call(this, chart, datasetIndex);\r\n\t\t\t// sort arrays\r\n\t\t\tif (typeof chart.options !== 'undefined' && typeof chart.options.sort !== 'undefined' && chart.options.sort.substr(0, 4) !== 'data') {\r\n\t\t\t\tvar dataset = chart.data.datasets[datasetIndex];\r\n\t\t\t\tvar dataPositions = [];\r\n\t\t\t\tvar originalData = dataset.data.slice();\r\n\t\t\t\thelpers.each(dataset.data, function (item, index) {\r\n\t\t\t\t\tdataPositions.push({index, value: item});\r\n\t\t\t\t});\r\n\t\t\t\tdataPositions.sort(function (a, b) {\r\n\t\t\t\t\treturn chart.options.sort === 'asc' ? a.value - b.value : b.value - a.value;\r\n\t\t\t\t});\r\n\t\t\t\t// sort labels in the same manner as data sort order\r\n\t\t\t\tvar labels = chart.data.labels.map((value, index) => {\r\n\t\t\t\t\treturn chart.data.labels[ dataPositions[index].index ];\r\n\t\t\t\t});\r\n\t\t\t\tchart.data.labels = labels;\r\n\t\t\t\t// sort other arrays inside datasets\r\n\t\t\t\tvar keys = Object.keys(dataset);\r\n\t\t\t\tfor (var i = 0, len = keys.length; i < len; i++) {\r\n\t\t\t\t\tvar key = keys[i];\r\n\t\t\t\t\tvar arr = dataset[key];\r\n\t\t\t\t\tif (dataset.hasOwnProperty(key) && Array.isArray(arr)) {\r\n\t\t\t\t\t\tvar sortedArr = arr.map((item, index) => {\r\n\t\t\t\t\t\t\treturn arr[dataPositions[index].index];\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tdataset[key] = sortedArr;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tlinkScales: function () {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\r\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\r\n\t\t\t}\r\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\r\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart,\r\n\t\t\t\t\tchartArea = chart.chartArea,\r\n\t\t\t\t\topts = chart.options,\r\n\t\t\t\t\tmeta = me.getMeta(),\r\n\t\t\t\t\telements = meta.data,\r\n\t\t\t\t\tborderWidth = opts.elements.borderWidth || 0,\r\n\t\t\t\t\tavailableWidth = chartArea.right - chartArea.left - borderWidth * 2,\r\n\t\t\t\t\tavailableHeight = chartArea.bottom - chartArea.top - borderWidth * 2;\r\n\r\n\t\t\t// top and bottom width\r\n\t\t\tvar bottomWidth = availableWidth,\r\n\t\t\t\t\ttopWidth = (opts.topWidth < availableWidth ? opts.topWidth : availableWidth) || 0;\r\n\t\t\tif (opts.bottomWidth) {\r\n\t\t\t\tbottomWidth = opts.bottomWidth < availableWidth ? opts.bottomWidth : availableWidth;\r\n\t\t\t}\r\n\r\n\t\t\t// percentage calculation and sort data\r\n\t\t\tvar dataset = me.getDataset(),\r\n\t\t\t\t\tvalAndLabels = [],\r\n\t\t\t\t\tvisiableNum = 0,\r\n\t\t\t\t\tdMax = 0;\r\n\t\t\thelpers.each(dataset.data, function (val, index) {\r\n\t\t\t\tvar backgroundColor = helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index),\r\n\t\t\t\t\t\thidden = elements[index].hidden;\r\n\t\t\t\tvalAndLabels.push({\r\n\t\t\t\t\thidden: hidden,\r\n\t\t\t\t\torgIndex: index,\r\n\t\t\t\t\tval: val,\r\n\t\t\t\t\tbackgroundColor: backgroundColor,\r\n\t\t\t\t\tborderColor: helpers.getValueAtIndexOrDefault(dataset.borderColor, index, backgroundColor),\r\n\t\t\t\t\tlabel: helpers.getValueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\r\n\t\t\t\t});\r\n\t\t\t\tif (!elements[index].hidden) {\r\n\t\t\t\t\tvisiableNum++;\r\n\t\t\t\t\tdMax = val > dMax ? val : dMax;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tvar dwRatio = bottomWidth / dMax;\r\n\t\t\t// For render hidden view\r\n\t\t\tvar _viewIndex = 0;\r\n\t\t\thelpers.each(valAndLabels, function (dal, index) {\r\n\t\t\t\tdal._viewIndex = !dal.hidden ? _viewIndex++ : -1;\r\n\t\t\t});\r\n\t\t\t// Elements height calculation\r\n\t\t\tvar gap = opts.gap || 0,\r\n\t\t\t\t\telHeight = (availableHeight - ((visiableNum - 1) * gap)) / visiableNum;\r\n\r\n\t\t\t// save\r\n\t\t\tme.topWidth = topWidth;\r\n\t\t\tme.dwRatio = dwRatio;\r\n\t\t\tme.elHeight = elHeight;\r\n\t\t\tme.valAndLabels = valAndLabels;\r\n\t\t\thelpers.each(elements, function (trapezium, index) {\r\n\t\t\t\tme.updateElement(trapezium, index, reset);\r\n\t\t\t}, me);\r\n\t\t},\r\n\r\n\t\t// update elements\r\n\t\tupdateElement: function updateElement(trapezium, index, reset) {\r\n\t\t\tvar me = this,\r\n\t\t\t\t\tchart = me.chart,\r\n\t\t\t\t\tchartArea = chart.chartArea,\r\n\t\t\t\t\topts = chart.options,\r\n\t\t\t\t\tsort = opts.sort,\r\n\t\t\t\t\tdwRatio = me.dwRatio,\r\n\t\t\t\t\telHeight = me.elHeight,\r\n\t\t\t\t\tgap = opts.gap || 0,\r\n\t\t\t\t\tborderWidth = opts.elements.borderWidth || 0;\r\n\r\n\t\t\t// calculate x,y,base, width,etc.\r\n\t\t\tvar x, y, x1, x2,\r\n\t\t\t\t\telementType = 'isosceles',\r\n\t\t\t\t\telementData = me.valAndLabels[index], upperWidth, bottomWidth,\r\n\t\t\t\t\tviewIndex = elementData._viewIndex < 0 ? index : elementData._viewIndex,\r\n\t\t\t\t\tbase = chartArea.top + (viewIndex + 1) * (elHeight + gap) - gap;\r\n\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\ttrapezium._xScale = me.getScaleForId(meta.xAxisID);\r\n\r\n\t\t\tif (sort === 'asc' || sort === 'data-asc' || !sort) {\r\n\t\t\t\t// Find previous element which is visible\r\n\t\t\t\tvar previousElement = helpers.findPreviousWhere(me.valAndLabels,\r\n\t\t\t\t\t\tfunction (el) {\r\n\t\t\t\t\t\t\treturn !el.hidden;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tindex\r\n\t\t\t\t\t\t);\r\n\t\t\t\tupperWidth = previousElement ? previousElement.val * dwRatio : me.topWidth;\r\n\t\t\t\tbottomWidth = elementData.val * dwRatio;\r\n\t\t\t} else if (sort === 'desc' || sort === 'data-desc') {\r\n\t\t\t\tvar nextElement = helpers.findNextWhere(me.valAndLabels,\r\n\t\t\t\t\t\tfunction (el) {\r\n\t\t\t\t\t\t\treturn !el.hidden;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tindex\r\n\t\t\t\t\t\t);\r\n\t\t\t\tupperWidth = elementData.val * dwRatio;\r\n\t\t\t\tbottomWidth = nextElement ? nextElement.val * dwRatio : me.topWidth;\r\n\t\t\t}\r\n\r\n\t\t\ty = chartArea.top + elementData.orgIndex * (elHeight + gap);\r\n\t\t\tif (opts.keep === 'left') {\r\n\t\t\t\telementType = 'scalene';\r\n\t\t\t\tx1 = chartArea.left + upperWidth / 2;\r\n\t\t\t\tx2 = chartArea.left + bottomWidth / 2;\r\n\t\t\t\tx = x1;\r\n\t\t\t} else if (opts.keep === 'right') {\r\n\t\t\t\telementType = 'scalene';\r\n\t\t\t\tx1 = chartArea.right - upperWidth / 2;\r\n\t\t\t\tx2 = chartArea.right - bottomWidth / 2;\r\n\t\t\t\tx = x1;\r\n\t\t\t} else {\r\n\t\t\t\tx = (chartArea.left + chartArea.right) / 2;\r\n\t\t\t}\r\n\r\n\t\t\thelpers.extend(trapezium, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: elementData.orgIndex,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\ttype: elementType,\r\n\t\t\t\t\ty: y,\r\n\t\t\t\t\tbase: base > chartArea.bottom ? chartArea.bottom : base,\r\n\t\t\t\t\tx: x,\r\n\t\t\t\t\tx1: x1,\r\n\t\t\t\t\tx2: x2,\r\n\t\t\t\t\tupperWidth: (reset || !!elementData.hidden) ? 0 : upperWidth,\r\n\t\t\t\t\tbottomWidth: (reset || !!elementData.hidden) ? 0 : bottomWidth,\r\n\t\t\t\t\tborderWidth: borderWidth,\r\n\t\t\t\t\tbackgroundColor: elementData && elementData.backgroundColor,\r\n\t\t\t\t\tborderColor: elementData && elementData.borderColor,\r\n\t\t\t\t\tlabel: elementData && elementData.label\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\ttrapezium.pivot();\r\n\t\t},\r\n\t\tremoveHoverStyle: function (trapezium) {\r\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, trapezium, this.chart.options.elements.trapezium);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],4:[function(require,module,exports){\r\n/**\r\n *\r\n * Extend trapezium element\r\n * @author Jone Casper\r\n * @email xu.chenhui@live.com\r\n *\r\n */\r\n\r\n\"use strict\";\r\n\r\nmodule.exports = function (Chart) {\r\n\tvar helpers = Chart.helpers,\r\n\t\t\tglobalOpts = Chart.defaults.global;\r\n\r\n\tglobalOpts.elements.trapezium = {\r\n\t\tbackgroundColor: globalOpts.defaultColor,\r\n\t\tborderWidth: 0,\r\n\t\tborderColor: globalOpts.defaultColor,\r\n\t\tborderSkipped: 'bottom',\r\n\t\ttype: 'isosceles'  // isosceles, scalene\r\n\t};\r\n\r\n\t// Thanks for https://github.com/substack/point-in-polygon\r\n\tvar pointInPolygon = function (point, vs) {\r\n\t\t// ray-casting algorithm based on\r\n\t\t// http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\r\n\r\n\t\tvar x = point[0], y = point[1];\r\n\r\n\t\tvar inside = false;\r\n\t\tfor (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\r\n\t\t\tvar xi = vs[i][0], yi = vs[i][1];\r\n\t\t\tvar xj = vs[j][0], yj = vs[j][1];\r\n\r\n\t\t\tvar intersect = ((yi > y) != (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\r\n\t\t\tif (intersect)\r\n\t\t\t\tinside = !inside;\r\n\t\t}\r\n\r\n\t\treturn inside;\r\n\t};\r\n\r\n\tChart.elements.Trapezium = Chart.elements.Rectangle.extend({\r\n\t\tgetCorners: function () {\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar globalOptionTrapeziumElements = globalOpts.elements.trapezium;\r\n\r\n\t\t\tvar corners = [],\r\n\t\t\t\t\ttype = vm.type || globalOptionTrapeziumElements.type,\r\n\t\t\t\t\ttop = vm.y,\r\n\t\t\t\t\tborderWidth = vm.borderWidth || globalOptionTrapeziumElements.borderWidth,\r\n\t\t\t\t\tupHalfWidth = vm.upperWidth / 2,\r\n\t\t\t\t\tbotHalfWidth = vm.bottomWidth / 2,\r\n\t\t\t\t\thalfStroke = borderWidth / 2;\r\n\r\n\t\t\thalfStroke = halfStroke < 0 ? 0 : halfStroke;\r\n\r\n\t\t\t// An isosceles trapezium\r\n\t\t\tif (type == 'isosceles') {\r\n\t\t\t\tvar x = vm.x;\r\n\r\n\t\t\t\t// Corner points, from bottom-left to bottom-right clockwise\r\n\t\t\t\t// | 1 2 |\r\n\t\t\t\t// | 0 3 |\r\n\t\t\t\tcorners = [\r\n\t\t\t\t\t[x - botHalfWidth + halfStroke, vm.base],\r\n\t\t\t\t\t[x - upHalfWidth + halfStroke, top + halfStroke],\r\n\t\t\t\t\t[x + upHalfWidth - halfStroke, top + halfStroke],\r\n\t\t\t\t\t[x + botHalfWidth - halfStroke, vm.base]\r\n\t\t\t\t];\r\n\t\t\t} else if (type == 'scalene') {\r\n\t\t\t\tvar x1 = vm.x1,\r\n\t\t\t\t\t\tx2 = vm.x2;\r\n\r\n\t\t\t\tcorners = [\r\n\t\t\t\t\t[x2 - botHalfWidth + halfStroke, vm.base],\r\n\t\t\t\t\t[x1 - upHalfWidth + halfStroke, top + halfStroke],\r\n\t\t\t\t\t[x1 + upHalfWidth - halfStroke, top + halfStroke],\r\n\t\t\t\t\t[x2 + botHalfWidth - halfStroke, vm.base]\r\n\t\t\t\t];\r\n\t\t\t}\r\n\r\n\r\n\t\t\treturn corners;\r\n\t\t},\r\n\t\tdraw: function () {\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar globalOptionTrapeziumElements = globalOpts.elements.trapezium;\r\n\r\n\t\t\tvar corners = this.getCorners();\r\n\t\t\tthis._cornersCache = corners;\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.fillStyle = vm.backgroundColor || globalOptionTrapeziumElements.backgroundColor;\r\n\t\t\tctx.strokeStyle = vm.borderColor || globalOptionTrapeziumElements.borderColor;\r\n\t\t\tctx.lineWidth = vm.borderWidth || globalOptionTrapeziumElements.borderWidth;\r\n\r\n\t\t\t// Find first (starting) corner with fallback to 'bottom'\r\n\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\r\n\t\t\tvar startCorner = borders.indexOf(\r\n\t\t\t\t\tvm.borderSkipped || globalOptionTrapeziumElements.borderSkipped,\r\n\t\t\t\t\t0);\r\n\t\t\tif (startCorner === -1)\r\n\t\t\t\tstartCorner = 0;\r\n\r\n\t\t\tfunction cornerAt(index) {\r\n\t\t\t\treturn corners[(startCorner + index) % 4];\r\n\t\t\t}\r\n\r\n\t\t\t// Draw rectangle from 'startCorner'\r\n\t\t\tctx.moveTo.apply(ctx, cornerAt(0));\r\n\t\t\tfor (var i = 1; i < 4; i++)\r\n\t\t\t\tctx.lineTo.apply(ctx, cornerAt(i));\r\n\r\n\t\t\tctx.fill();\r\n\t\t\tif (vm.borderWidth) {\r\n\t\t\t\tctx.stroke();\r\n\t\t\t}\r\n\t\t},\r\n\t\theight: function () {\r\n\t\t\tvar vm = this._view;\r\n\t\t\tif (!vm) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\r\n\t\t\treturn vm.base - vm.y;\r\n\t\t},\r\n\t\tinRange: function (mouseX, mouseY) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\tif (!vm) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar corners = this._cornersCache ? this._cornersCache : this.getCorners();\r\n\t\t\treturn pointInPolygon([mouseX, mouseY], corners);\r\n\t\t},\r\n\t\tinLabelRange: function (mouseX) {\r\n\t\t\tvar x,\r\n\t\t\t\t\tvm = this._view;\r\n\r\n\t\t\tif (!vm) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (vm.type == 'scalene') {\r\n\t\t\t\tif (vm.x1 > vm.x2) {\r\n\t\t\t\t\treturn mouseX >= vm.x2 - vm.bottomWidth / 2 && mouseX <= vm.x1 + vm.upperWidth / 2;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn mouseX <= vm.x2 + vm.bottomWidth / 2 && mouseX >= vm.x1 - vm.upperWidth / 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar maxWidth = Math.max(vm.upperWidth, vm.bottomWidth);\r\n\t\t\treturn mouseX >= vm.x - maxWidth / 2 && mouseX <= vm.x + maxWidth / 2;\r\n\t\t},\r\n\t\ttooltipPosition: function () {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn {\r\n\t\t\t\tx: vm.x || vm.x2,\r\n\t\t\t\ty: vm.base - (vm.base - vm.y) / 2\r\n\t\t\t};\r\n\t\t},\r\n\t\tgetArea: function () {\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar total = 0;\r\n\t\t\tvar corners = this._cornersCache ? this._cornersCache : this.getCorners();\r\n\t\t\tfor (var i = 0, l = corners.length; i < l; i++) {\r\n\t\t\t\tvar addX = corners[i][0];\r\n\t\t\t\tvar addY = corners[i == corners.length - 1 ? 0 : i + 1][1];\r\n\t\t\t\tvar subX = corners[i == corners.length - 1 ? 0 : i + 1][0];\r\n\t\t\t\tvar subY = corners[i][1];\r\n\t\t\t\ttotal += (addX * addY * 0.5);\r\n\t\t\t\ttotal -= (subX * subY * 0.5);\r\n\t\t\t}\r\n\t\t\treturn Math.abs(total);\r\n\t\t},\r\n\t\tgetCenterPoint: function () {\r\n\t\t\tvar corners = this._cornersCache ? this._cornersCache : this.getCorners();\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar x = 0, y = 0, i, j, f, point1, point2;\r\n\t\t\tfor (i = 0, j = corners.length - 1; i < corners.length; j = i, i++) {\r\n\t\t\t\tpoint1 = corners[i];\r\n\t\t\t\tpoint2 = corners[j];\r\n\t\t\t\tf = point1[0] * point2[1] - point2[0] * point1[1];\r\n\t\t\t\tx += (point1[0] + point2[0]) * f;\r\n\t\t\t\ty += (point1[1] + point2[1]) * f;\r\n\t\t\t}\r\n\t\t\tf = this.getArea() * 6;\r\n\t\t\treturn {x: x / f, y: y / f};\r\n\t\t},\r\n\t});\r\n};\r\n\r\n},{}]},{},[2])(2)\r\n});\r\n"],"sourceRoot":""}